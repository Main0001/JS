// Первое его отличие от Map в том, что ключи в WeakMap должны быть объектами, 
// а не примитивными значениями:

let weakMap = new WeakMap();

let obj = {};

weakMap.set(obj, "ok"); // работает (объект в качестве ключа)

// нельзя использовать строку в качестве ключа
weakMap.set("test", "Whoops"); // Ошибка, потому что "test" не объект
// Теперь, если мы используем объект в качестве ключа и если больше нет ссылок на этот объект, 
// то он будет удалён из памяти (и из объекта WeakMap) автоматически.

let john = { name: "John" };

weakMap = new WeakMap();
weakMap.set(john, "...");

john = null; // перезаписываем ссылку на объект

// объект john удалён из памяти!

// WeakMap не поддерживает перебор и методы 
// keys(), values(), entries(), так что нет способа взять все ключи 
// или значения из неё.

// В WeakMap присутствуют только следующие методы:

// weakMap.get(key)
// weakMap.set(key, value)
// weakMap.delete(key)
// weakMap.has(key)

//Tasks

//1
let messages = [
  {text: "Hello", from: "John"},
  {text: "How goes?", from: "John"},
  {text: "See you soon", from: "Alice"}
];

//Можно использовать WeakSet, т.к. позволяет
//очиститься если происходит удаление сообщения
//Данные нельзя изменять

//Используем WeakMap и дату в качестве значния
//А сообщение в качестве ключа